---
# Initiates the main build-test-deploy workflow.
name: Main

# Run this workflow on any push or pull request to primary branches
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - release-*
      - main

permissions:
  contents: read
  packages: write
  checks: write
  statuses: write

# Only allow one run of this workflow per PR or branch at a time.
# For PRs, when a new run is triggered the current run will be cancelled.
# For commits to branches, new runs will be queued.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  changes:
    name: Parse changes
    uses: ./.github/workflows/changes.yaml
    with:
      branch-name: ${{ github.base_ref || github.ref_name }}

  #################################################
  ##################   BUILD    ###################
  #################################################

  # Build and push the Promptguard chat server docker image
  build-promptguard-chat-server:
    name: Build Promptguard chat server
    uses: ./.github/workflows/build-docker.yaml
    needs: [changes]
    # Rebuild if the Promptguard chat server has changes or if this workflow has changed
    if: |
      needs.changes.outputs.has-promptguard-chat-server-changes == 'true' ||
      contains(needs.changes.outputs.changed-workflows, 'build-docker.yaml') ||
      contains(needs.changes.outputs.changed-workflows, 'main.yaml')
    with:
      image-name: ghcr.io/opaque-systems/promptguard-chat-server
      docker-context: .
      dockerfile: ./docker/Dockerfile
      base-image-version: ${{ needs.changes.outputs.fallback-image-tag }}

  #################################################
  ##################    TEST    ###################
  #################################################

  #################################################
  #################   PUBLISH   ###################
  #################################################

  publish-promptguard-chat-server:
    name: Publish chat server image
    uses: ./.github/workflows/publish-docker.yaml
    needs: [changes, build-promptguard-chat-server]

    # Run on commits to primary branches and release PRs
    # if there is a new client image or this workflow has changed
    # The always() lets the job still run if upstream jobs were skipped, and the
    # needs.*.result checks stop the job if upstream jobs failed or were cancelled
    # See https://github.com/actions/runner/issues/491#issuecomment-907216595
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled') &&
      (
        github.event_name == 'push' ||
        startsWith(github.head_ref, 'release-')
      )
      &&
      (
        needs.build-promptguard-chat-server.result == 'success' ||
        contains(needs.changes.outputs.changed-workflows, 'publish-docker.yaml') ||
        contains(needs.changes.outputs.changed-workflows, 'main.yaml')
      )
    with:
      # If the build was skipped, ie if we're only running because the publish workflow changed,
      # retag the latest base branch image. Typically this will end up being a no-op unless we are
      # retagging an existing primary branch image as a release image.
      image-name: |-
        ${{
          needs.build-promptguard-chat-server.outputs.image-name ||
          'ghcr.io/opaque-systems/promptguard-chat-server'
        }}
      image-version: |-
        ${{
          needs.build-promptguard-chat-server.outputs.image-version ||
          needs.changes.outputs.fallback-image-tag
        }}
    secrets: inherit

  #################################################
  ##################   DEPLOY   ###################
  #################################################
